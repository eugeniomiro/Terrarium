<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrarium</name>
    </assembly>
    <members>
        <member name="T:Terrarium.Client.AboutForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:Terrarium.Client.AboutForm.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Terrarium.Client.Block">
            <summary>
             Creates a new multi-monitor blocking form.  This blocks off non-primary
             monitors when running as as screen saver
            </summary>
        </member>
        <member name="M:Terrarium.Client.Block.#ctor">
            <summary>
             Create a new Block Form that represents the primary screen.
            </summary>
        </member>
        <member name="M:Terrarium.Client.Block.BlockScreens(System.Windows.Forms.Screen)">
            <summary>
            Enumerates screens and creates an instance of Block for
            all screens other than primary. Primary is usually the 
            screen that the screen saver will run on.
            </summary>
            <param name="primary">The screen you wish to not block.</param>
        </member>
        <member name="T:Terrarium.Client.MainForm">
            <summary>
             <para>
              The Primary Terrarium application UI.  This class is responsible for
              providing the link between user input and the various UI controls and
              primary game engine.  This class also launches the GameEngine dependent
              on the load method and user input.
             </para>
             <para>
              The MainForm can be launched with a bunch of extra properties that control
              how the application initializes in the beginning.  It is also capable of
              processing most Screen Saver related command line parameters.
             </para>
            </summary>
        </member>
        <member name="M:Terrarium.Client.MainForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Do nothing when painting the background
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Terrarium.Client.MainForm.Fullscreen">
            <summary>
            Run in fullscreen?
            </summary>
        </member>
        <member name="P:Terrarium.Client.MainForm.ShowUI">
            <summary>
            Show the User Interface controls?
            </summary>
        </member>
        <member name="T:Terrarium.Client.PeerProperties">
            <summary>
             PeerProperties dialog used to give access to various GameConfig values
             from a user interface.
            </summary>
        </member>
        <member name="F:Terrarium.Client.PeerProperties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.#ctor">
            <summary>
             Creates a new instance of the peer properties form and enables
             the designer.
            </summary>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.Dispose(System.Boolean)">
            <summary>
             Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.PanelChange_Click(System.Object,System.EventArgs)">
            <summary>
             Implement panel visiblity changes.  This makes a kind of Tab
             control.
            </summary>
            <param name="sender">Button</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.SwitchPanel(System.String)">
            <summary>
             Enables programmatic panel switching given the name of the panel.
            </summary>
            <param name="panel">The name of the panel minus the pnl prefix.</param>
            <returns>True if the requested panel could be set, false otherwise.</returns>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.PerformanceSlider_ValueChanged(System.Object,System.EventArgs)">
            <summary>
             Updates the slider label whenever the slider value changes.
            </summary>
            <param name="sender">TrackBar</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.OK_Click(System.Object,System.EventArgs)">
            <summary>
             Updates the configuration variables when the user clicks the OK button.
            </summary>
            <param name="sender">Button</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.Cancel_Click(System.Object,System.EventArgs)">
            <summary>
             Cancels out the dialog without updating configuration values.
            </summary>
            <param name="sender">Button</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.PeerProperties_Load(System.Object,System.EventArgs)">
            <summary>
             Sets initial control values after the form loads.
            </summary>
            <param name="sender">Form</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.RegisterEmail">
            <summary>
             Controls email registration with the Terrarium server.
            </summary>
            <returns>True if the email was sent successfully, false otherwise.</returns>
        </member>
        <member name="M:Terrarium.Client.PeerProperties.RegisterServer">
            <summary>
             Tries to validate a new server whenever the server changes.
            </summary>
            <returns>True if the server is a valid Terrarium server, false otherwise.</returns>
        </member>
        <member name="T:Terrarium.Client.ReportStats">
            <summary>
             Reports local terrarium statistics to the user.
            </summary>
        </member>
        <member name="M:Terrarium.Client.ReportStats.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Terrarium.Client.ReportStats.#ctor">
            <summary>
             Creates a new ReportStats form and enables designer support.
            </summary>
        </member>
        <member name="M:Terrarium.Client.ReportStats.Dispose(System.Boolean)">
            <summary>
             Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Terrarium.Client.ReportStats.timerAutoRefresh_Tick(System.Object,System.EventArgs)">
            <summary>
             Updates the data on the form whenever the timer ticks.
            </summary>
            <param name="sender">Timer</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.ReportStats.Refresh_Click(System.Object,System.EventArgs)">
            <summary>
             Updates form data as a result of the user clicking the refresh button.
            </summary>
            <param name="sender">Button</param>
            <param name="e">Null</param>
        </member>
        <member name="M:Terrarium.Client.ReportStats.CloseForm_Click(System.Object,System.EventArgs)">
            <summary>
             Closes the form as a result of the close button.
            </summary>
            <param name="sender">Button</param>
            <param name="e">Null</param>
        </member>
        <member name="T:Terrarium.Client.SplashScreen.SplashScreenCustomizerEventHandler">
            <summary>
             Provides a definition for the callback method used to customize the drawing
             of a splash screen surface.
            </summary>
        </member>
        <member name="T:Terrarium.Client.SplashScreen.SplashScreenSurface">
            <summary>
             Represents a splash screen surface.  The surface is generated
             from a Graphics context object, and a rectangular region.
            </summary>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashScreenSurface.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
             Creates a new SplashScreenSurface class.
            </summary>
            <param name="g">The graphics context used for drawing.</param>
            <param name="r">The rectangular drawing region.</param>
        </member>
        <member name="T:Terrarium.Client.SplashScreen.SplashWindow">
            <summary>
             Represents a native window that can be used as a splash
             screen.  This enables display of UI before the Windows.Forms
             libraries have been *warmed* up.
            </summary>
            <remarks>
             WARNING! Even though ReSharper and other tools will show values here
             as not being used or referenced, DO NOT REMOVE or otherwise refactor
             them away. We're in Win32 COM land people and this stuff breaks easily.
            </remarks>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.#ctor">
            <summary>
             Can't create a window this way.  Use the Current property.
            </summary>
        </member>
        <member name="P:Terrarium.Client.SplashScreen.SplashWindow.Current">
            <summary>
             Returns the current splash window.  If one doesn't exist
             then one is created on the fly.
            </summary>
        </member>
        <member name="P:Terrarium.Client.SplashScreen.SplashWindow.Image">
            <summary>
             Set the image used as the background of the splash window.
            </summary>
        </member>
        <member name="P:Terrarium.Client.SplashScreen.SplashWindow.MinimumDuration">
            <summary>
             This is the minimum amount of time the window will display for.
            </summary>
        </member>
        <member name="P:Terrarium.Client.SplashScreen.SplashWindow.ShowShadow">
            <summary>
             Should a drop shadow be displayed?
            </summary>
        </member>
        <member name="P:Terrarium.Client.SplashScreen.SplashWindow.TransparencyKey">
            <summary>
             Enabled a transparency key color for the image.  This will
             generate a *cool* splash screen with transparent regions.
            </summary>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.CreateNativeWindow">
            <summary>
             Creates a native Windows OS, Window to represent the
             splash screen.
            </summary>
            <returns>True if the windows was created.</returns>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.Hide(System.Windows.Forms.Form)">
            <summary>
             Hides the window and activates the given form after the
             splash screen is hidden.  This listens for the minimum
             display duration to make sure it doesn't get hidden too
             soon.
            </summary>
            <param name="formToActivate">The Windows Forms Form to activate when the splash screen is hidden.</param>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.RegisterWindowClass">
            <summary>
             Registers the native window class associated with the window
             generated to display the splash window.
            </summary>
            <returns>True if the registration succeeded, false otherwise.</returns>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.SetCustomizer(Terrarium.Client.SplashScreen.SplashScreenCustomizerEventHandler)">
            <summary>
             Enables the use of a special customization callback handler.  Examine
             the SplashScreenCustomizerEventHandler.cs file for more information.
            </summary>
            <param name="customizer">Set the customizer callback for this splash screen.</param>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.Show">
            <summary>
             Start a new thread and launch the splash screen window.
            </summary>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.ThreadFunction">
            <summary>
             This method is called to run the splash screen thread.  This
             is responsible for handling the windows message pump and allowing
             the splash screen to run while the application continues to load
             by itself.
            </summary>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
             A custom windows procedure that processes events for the splash screen
             window.  the WM_CREATE, WM_DESTROY, WM_TIMER, and WM_PAINT messages are handled
             specifically.
            </summary>
            <param name="hwnd">The handle of the window.</param>
            <param name="msg">The windows message identifier.</param>
            <param name="wParam">The *Word* Message parameters.</param>
            <param name="lParam">The *Long* Message parameters.</param>
            <returns>A return value adequate to the message sent.</returns>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.IsDropShadowSupported">
            <summary>
             Examines OS support for the drop shadow feature.
            </summary>
            <returns>True if the OS supports drop shadows, false otherwise.</returns>
        </member>
        <member name="M:Terrarium.Client.SplashScreen.SplashWindow.IsLayeringSupported">
            <summary>
             Examines OS support for the transparency color key through
             layering support.
            </summary>
            <returns>True if the OS supports transparency and layering, false otherwise.</returns>
        </member>
        <member name="T:Terrarium.Client.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Terrarium.Client.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Terrarium.Client.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Terrarium.Client.Properties.Resources.screensaver">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
